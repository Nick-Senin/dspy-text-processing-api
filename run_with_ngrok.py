#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask —Å–µ—Ä–≤–µ—Ä–∞ —Å ngrok —Ç—É–Ω–Ω–µ–ª–µ–º.
–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API.
"""

import os
import sys
import threading
import time
from pyngrok import ngrok, conf

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ngrok
NGROK_AUTH_TOKEN = "2xlekxGLWrTgk1gGX4S5wAXtCQZ_2cH9Q17JfRavSnPvCL8G9"  # –í–∞—à —Ç–æ–∫–µ–Ω
PORT = 5000

def setup_ngrok():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç ngrok —Ç—É–Ω–Ω–µ–ª—å."""
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        ngrok.set_auth_token(NGROK_AUTH_TOKEN)
        
        # –°–æ–∑–¥–∞–µ–º HTTP —Ç—É–Ω–Ω–µ–ª—å
        print(f"üîó –°–æ–∑–¥–∞–Ω–∏–µ ngrok —Ç—É–Ω–Ω–µ–ª—è –Ω–∞ –ø–æ—Ä—Ç {PORT}...")
        public_tunnel = ngrok.connect(PORT)
        public_url = public_tunnel.public_url
        
        print(f"‚úÖ Ngrok —Ç—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω!")
        print(f"üåê –ü—É–±–ª–∏—á–Ω—ã–π URL: {public_url}")
        print(f"üìù API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
        print(f"   - {public_url}/health")
        print(f"   - {public_url}/process")
        print(f"   - {public_url}/")
        
        return public_url
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ ngrok —Ç—É–Ω–Ω–µ–ª—è: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ pyngrok: pip install pyngrok")
        print("2. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ ngrok")
        print("3. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        return None

def run_flask_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Flask —Å–µ—Ä–≤–µ—Ä."""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
        if not os.path.exists('server/app.py'):
            print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª server/app.py")
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.")
            return False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É server –≤ –ø—É—Ç—å Python
        server_path = os.path.join(os.getcwd(), 'server')
        if server_path not in sys.path:
            sys.path.insert(0, server_path)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from server.app import app
        
        print(f"üöÄ –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {PORT}...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –±–µ–∑ debug —Ä–µ–∂–∏–º–∞ –¥–ª—è ngrok
        app.run(host='0.0.0.0', port=PORT, debug=False)
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üåê –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ —Å ngrok —Ç—É–Ω–Ω–µ–ª–µ–º")
    print("="*60)
    
    # –°–æ–∑–¥–∞–µ–º ngrok —Ç—É–Ω–Ω–µ–ª—å
    public_url = setup_ngrok()
    if not public_url:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å ngrok —Ç—É–Ω–Ω–µ–ª—å. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return
    
    print("\n" + "="*60)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
        print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("\nüìù –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:")
        print(f"curl {public_url}/health")
        print("\n" + "-"*60)
        
        run_flask_server()
        
    except KeyboardInterrupt:
        print("\n\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ ngrok —Ç—É–Ω–Ω–µ–ª–∏
        try:
            print("üîó –ó–∞–∫—Ä—ã—Ç–∏–µ ngrok —Ç—É–Ω–Ω–µ–ª–µ–π...")
            ngrok.kill()
            print("‚úÖ Ngrok —Ç—É–Ω–Ω–µ–ª–∏ –∑–∞–∫—Ä—ã—Ç—ã.")
        except:
            pass
        
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

if __name__ == "__main__":
    main()